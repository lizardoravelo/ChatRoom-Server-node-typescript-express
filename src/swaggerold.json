{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Express API",
    "version": "1.0.0",
    "description": "A simple Express API with Swagger documentation"
  },
  "servers": [
    {
      "url": "http://localhost:5001/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/signUp": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "User's name" },
                  "email": { "type": "string", "description": "User's email" },
                  "password": { "type": "string", "description": "User's password" },
                  "address": { "type": "string", "description": "User's address (optional)" },
                  "phone": { "type": "string", "description": "User's phone (optional)" },
                  "role": { "type": "string", "enum": ["user", "admin"], "description": "User's role" }
                },
                "example": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "password": "securePassword123",
                  "address": "123 Main St",
                  "phone": "+1234567890",
                  "role": "user"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/auth/signIn": {
      "post": {
        "summary": "Login a user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User logged in successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/room": {
      "get": {
        "summary": "Get all rooms",
        "tags": ["Room"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "createdBy": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new room",
        "tags": ["Room"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "Room name" },
                  "description": { "type": "string", "description": "Room description" }
                },
                "example": {
                  "name": "Tech Talks",
                  "description": "A room for tech discussions"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Room created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/room/{roomId}/messages": {
      "get": {
        "summary": "Get messages for a room",
        "tags": ["Messages"],
        "description": "Retrieves messages linked to a room. Messages are stored independently but associated with a specific room.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "roomId": { "type": "string" },
                      "userId": { "type": "string" },
                      "content": { "type": "string" },
                      "timestamp": { "type": "string", "format": "date-time" }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden" }
        }
      },
      "post": {
        "summary": "Send a message to a room",
        "tags": ["Messages"],
        "description": "Allows users to send messages in a specific room. Messages are stored independently but associated with the room.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": { "type": "string", "description": "Message content" }
                },
                "example": {
                  "content": "Hello, this is my first message!"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Message sent successfully" },
          "400": { "description": "Bad request" }
        }
      }
    }
  }
}

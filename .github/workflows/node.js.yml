name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Generate .env file from GitHub Secrets
        run: |
          echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "APP=${{ secrets.APP }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "HOSTNAME=${{ secrets.HOSTNAME }}" >> .env
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
          echo "MONGOTESTURI=${{ secrets.MONGOTESTURI }}" >> .env
          echo "TRANSPORTER_HOST=${{ secrets.TRANSPORTER_HOST }}" >> .env
          echo "TRANSPORTER_PORT=${{ secrets.TRANSPORTER_PORT }}" >> .env
          echo "TRANSPORTER_USERNAME=${{ secrets.TRANSPORTER_USERNAME }}" >> .env
          echo "TRANSPORTER_PASSWORD=${{ secrets.TRANSPORTER_PASSWORD }}" >> .env
          echo "MESSAGE_PER_PAGE=${{ secrets.MESSAGE_PER_PAGE }}" >> .env
          echo "ROOMS_PER_PAGE=${{ secrets.ROOMS_PER_PAGE }}" >> .env

      - name: Build Project
        run: npm run build --if-present

      - name: Run Tests
        run: npm test
